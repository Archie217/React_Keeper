{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Archita\\\\OneDrive\\\\Desktop\\\\Mine\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Archita\\\\OneDrive\\\\Desktop\\\\Mine\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Archita\\\\OneDrive\\\\Desktop\\\\Mine\\\\keeper-app-part-1-starting\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddCircleIcon from'@material-ui/icons/AddCircle';import Fab from'@material-ui/core/Fab';import Zoom from'@material-ui/core/Zoom';function CreateArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setExpanded=_useState2[1];var _useState3=useState({title:\"\",content:\"\"}),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function expand(){setExpanded(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},isExpanded?/*#__PURE__*/React.createElement(\"input\",{onChange:handleChange,value:note.title,name:\"title\",placeholder:\"Title\"}):null,/*#__PURE__*/React.createElement(\"textarea\",{onClick:expand,onChange:handleChange,value:note.content,name:\"content\",placeholder:\"Take a note...\",rows:isExpanded?3:1}),/*#__PURE__*/React.createElement(Zoom,{in:isExpanded},/*#__PURE__*/React.createElement(Fab,{onClick:submitNote},/*#__PURE__*/React.createElement(AddCircleIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["C:/Users/Archita/OneDrive/Desktop/Mine/keeper-app-part-1-starting/src/Components/CreateArea.jsx"],"names":["React","useState","AddCircleIcon","Fab","Zoom","CreateArea","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expand"],"mappings":"0kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA0B,CAExB,cAAkCL,QAAQ,CAAC,KAAD,CAA1C,wCAAOM,UAAP,eAAmBC,WAAnB,eAEA,eAAwBP,QAAQ,CAAC,CAC3BQ,KAAK,CAAE,EADoB,CAE3BC,OAAO,CAAE,EAFkB,CAAD,CAAhC,yCAAOC,IAAP,eAAaC,OAAb,eAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAECL,OAAO,CAAC,SAACM,QAAD,CAAc,CACjB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALG,CAAP,CAME,CAEL,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA0B,CAClBR,KAAK,CAACc,KAAN,CAAYT,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,KAAK,CAACO,cAAN,GACH,CAEH,QAASC,CAAAA,MAAT,EAAiB,CACbd,WAAW,CAAC,IAAD,CAAX,CACH,CAED,mBACI,4CACI,4BAAM,SAAS,CAAG,aAAlB,EACKD,UAAU,cAAG,6BAAO,QAAQ,CAAIM,YAAnB,CAAiC,KAAK,CAAIF,IAAI,CAACF,KAA/C,CAAsD,IAAI,CAAG,OAA7D,CAAqE,WAAW,CAAC,OAAjF,EAAH,CAAiG,IADhH,cAEI,gCAAU,OAAO,CAAIa,MAArB,CAA6B,QAAQ,CAAIT,YAAzC,CAAuD,KAAK,CAAIF,IAAI,CAACD,OAArE,CAA8E,IAAI,CAAC,SAAnF,CAA6F,WAAW,CAAC,gBAAzG,CAA0H,IAAI,CAAEH,UAAU,CAAG,CAAH,CAAO,CAAjJ,EAFJ,cAGG,oBAAC,IAAD,EAAM,EAAE,CAAIA,UAAZ,eACA,oBAAC,GAAD,EAAK,OAAO,CAAIY,UAAhB,eAA4B,oBAAC,aAAD,MAA5B,CADA,CAHH,CADJ,CADJ,CAYH,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props){\r\n\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n      });\r\n    \r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n     setNote((prevNote) => {\r\n          return {\r\n            ...prevNote,\r\n            [name]: value\r\n          };\r\n        });\r\n      }\r\n\r\n  function submitNote(event){\r\n          props.onAdd(note)\r\n          setNote({\r\n            title: \"\",\r\n            content: \"\"\r\n          })\r\n          event.preventDefault();\r\n      }\r\n      \r\n    function expand(){\r\n        setExpanded(true);\r\n    }  \r\n\r\n    return(\r\n        <div>\r\n            <form className = \"create-note\">\r\n                {isExpanded ? <input onChange = {handleChange} value = {note.title} name = \"title\" placeholder=\"Title\" /> : null}\r\n                <textarea onClick = {expand} onChange = {handleChange} value = {note.content} name=\"content\" placeholder=\"Take a note...\" rows={isExpanded ? 3 : 1} />\r\n               <Zoom in = {isExpanded}>\r\n               <Fab onClick = {submitNote}><AddCircleIcon/>\r\n               </Fab>\r\n               </Zoom>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateArea;"]},"metadata":{},"sourceType":"module"}